create table if not exists genre
(
    genre_id      int generated by default as identity primary key,
    name          varchar(255)
);

create table if not exists film
(
    film_id       int generated by default as identity primary key,
    name          varchar(64) not null,
    description   varchar(500),
    release_date  timestamp,
    duration      long,
    mpa           enum ('G', 'PG', 'PG13', 'NC17', 'R')
);

create table if not exists film_genre
(
    film_id        int generated by default as identity primary key,
    genre_id       int not null,
    CONSTRAINT fk_genre_id
        FOREIGN KEY (genre_id)
            REFERENCES genre (genre_id),
    CONSTRAINT fk_film_id
        FOREIGN KEY (film_id)
            REFERENCES film (film_id)
);

create table if not exists users
(
    user_id         int generated by default as identity primary key,
    email           varchar(64) not null,
    login           varchar(64),
    name            varchar(64) not null,
    birthday        timestamp
);

create table if not exists friend
(
    user_id             int not null,
    friend_id           int not null,
    status_friendship   varchar(64) not null default 'NOT_ACCEPT',
    CONSTRAINT pk_user_friend
        PRIMARY KEY (user_id, friend_id),
    CONSTRAINT fk_friend_id
        FOREIGN KEY (friend_id)
            REFERENCES users (user_id),
    CONSTRAINT fk_user_id
        FOREIGN KEY (user_id)
            REFERENCES users (user_id)
);
create table if not exists likes
(
    film_id        int generated by default as identity primary key,
    user_id        int not null,
    CONSTRAINT fk_like_user_id
        FOREIGN KEY (user_id)
            REFERENCES users (user_id),
    CONSTRAINT fk_like_film_id
        FOREIGN KEY (film_id)
            REFERENCES film (film_id)
);
